# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: s3-app-data-pv
# spec:
#   capacity:
#     storage: 5Gi
#   accessModes:
#     - ReadWriteMany
#   persistentVolumeReclaimPolicy: Retain
#   storageClassName: ""
#   volumeMode: Filesystem
#   # mountOptions:
#   #   - allow_delete
#   csi:
#     driver: s3.csi.aws.com
#     volumeHandle: s3-app-data-pv
#     volumeAttributes:
#       bucketName: podidentity-app-data-bmp6dt88
#       region: ap-northeast-2
#       mounter: mountpoint
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-app-data-pv
spec:
  capacity:
    storage: 1200Gi # Ignored, required
  accessModes:
    - ReadWriteMany # Supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # Required for static provisioning
  claimRef: # To ensure no other PVCs can claim this PV
    namespace: s3-mount-test # Namespace is required even though it's in "default" namespace.
    name: s3-app-data-pvc # Name of your PVC
  mountOptions:
    - allow-delete
    - region ap-northeast-2
    - prefix podidentity-app-data-bmp6dt88/
  csi:
    driver: s3.csi.aws.com # Required
    volumeHandle: s3-app-data-pv # Must be unique
    volumeAttributes:
      bucketName: podidentity-app-data-bmp6dt88
---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: s3-app-data-pvc
#   namespace: s3-mount-test
# spec:
#   accessModes:
#     - ReadWriteMany
#   storageClassName: ""  # default StorageClass(gp3) 사용 방지
#   resources:
#     requests:
#       storage: 5Gi
#   volumeName: s3-app-data-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-app-data-pvc
  namespace: s3-mount-test
spec:
  accessModes:
    - ReadWriteMany # Supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # Required for static provisioning
  resources:
    requests:
      storage: 1200Gi # Ignored, required
  volumeName: s3-app-data-pv # Name of your PV
---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: s3-app-data-tester
#   namespace: s3-mount-test
# spec:
#   containers:
#     - name: busybox
#       image: public.ecr.aws/docker/library/busybox:1.36
#       command:
#         - sh
#         - -c
#         - |
#           while true; do
#             date >> /data/test.log;
#             sleep 30;
#           done
#       volumeMounts:
#         - name: s3
#           mountPath: /data
#   volumes:
#     - name: s3
#       persistentVolumeClaim:
#         claimName: s3-app-data-pvc
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-app
  namespace: s3-mount-test
spec:
  containers:
    - name: app
      image: ubuntu
      command: ["/bin/sh"]
      args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: s3-app-data-pvc