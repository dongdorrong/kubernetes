apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "${ALB_NAME_SVC}"
  namespace: istio-ingress
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: "${ALB_NAME_SVC}"
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/subnets: 	"${PUBLIC_SUBNET_IDS}"
    alb.ingress.kubernetes.io/certificate-arn: "${ACM_CERT_ARN}"
    alb.ingress.kubernetes.io/wafv2-acl-arn: "${WAF_ACL_ARN}"
    # alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: '${ISTIO_INGRESS_HEALTHCHECK_PORT}'
    alb.ingress.kubernetes.io/healthcheck-path: '/healthz/ready'
    alb.ingress.kubernetes.io/tags: Environment=dev, Application=dongdorrong
    # # 허용할 IP 주소 지정
    alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: istio-ingress
            port:
              number: 80